package io.objects.tl.api.request;

import io.objects.tl.TLContext;
import io.objects.tl.api.TLAbsWallPaper;
import io.objects.tl.api.TLSecureCredentialsEncrypted;
import io.objects.tl.core.TLMethod;
import io.objects.tl.core.TLVector;

import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;

import static io.objects.tl.StreamUtils.*;

/**
 * This class is generated by Mono's TL class generator
 */
public class TLRequestAccountGetWallPapersVtd extends TLMethod<TLVector<TLAbsWallPaper>> {
    public static final int CONSTRUCTOR_ID = 0xaabb1763;

    int hash;

    private final String _constructor = "account.getWallPapersVtd#aabb1763";

    public TLRequestAccountGetWallPapersVtd() {
    }

    @Override
    @SuppressWarnings({"unchecked", "SimplifiableConditionalExpression"})
    public TLVector<TLAbsWallPaper> deserializeResponse(InputStream stream, TLContext context)
            throws IOException {
        return readTLVector(stream, context);
    }

    @Override
    public void serializeBody(OutputStream stream) throws IOException {
        writeInt(hash, stream);
    }

    @Override
    @SuppressWarnings({"unchecked", "SimplifiableConditionalExpression"})
    public void deserializeBody(InputStream stream, TLContext context) throws IOException {
        hash = readInt(stream);
    }

    @Override
    public String toString() {
        return _constructor;
    }

    public int getHash() {
        return hash;
    }

    public void setHash(int hash) {
        this.hash = hash;
    }

    @Override
    public int getConstructorId() {
        return CONSTRUCTOR_ID;
    }
}
