package io.objects.tl.api;

import io.objects.tl.TLContext;
import io.objects.tl.core.TLObject;

import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;

import static io.objects.tl.StreamUtils.*;
import static io.objects.tl.TLObjectUtils.*;

/**
 * This class is generated by Amin Badiezadegan.
 */
public class TLReqResLog extends TLObject {
    public static final int CONSTRUCTOR_ID = 0x87232bc8;

    private final String _constructor = "reqResLog#87232bc8";

    protected long authKeyId;

    protected int userId;

    protected long requestTime;

    protected long responseTime;

    protected TLObject request;

    //    protected TLObject updates;

    protected TLObject response;

    public TLReqResLog() {
    }

    public TLReqResLog(long authKeyId, int userId, long requestTime, long responseTime, TLObject request, TLObject response, TLObject updates) {
        this.authKeyId = authKeyId;
        this.userId = userId;
        this.requestTime = requestTime;
        this.responseTime = responseTime;
        this.request = request;
        this.response = response;
//        this.updates = updates;
    }

    @Override
    public void serializeBody(OutputStream stream) throws IOException {
        writeLong(authKeyId, stream);
        writeInt(userId, stream);
        writeLong(requestTime, stream);
        writeLong(responseTime, stream);
        writeTLObject(request, stream);
        writeTLObject(response, stream);
//        writeTLObject(updates, stream);
    }

    @Override
    @SuppressWarnings({"unchecked", "SimplifiableConditionalExpression"})
    public void deserializeBody(InputStream stream, TLContext context) throws IOException {
        authKeyId = readLong(stream);
        userId = readInt(stream);
        requestTime = readLong(stream);
        responseTime = readLong(stream);
        request = readTLObject(stream, context);
        response = readTLObject(stream, context);
//        updates = readTLObject(stream, context);
    }

    @Override
    public int computeSerializedSize() {
        int size = SIZE_CONSTRUCTOR_ID;
        size += SIZE_INT64;
        size += SIZE_INT64;
        size += SIZE_INT64;
        size += SIZE_INT32;
        size += request.computeSerializedSize();
        size += response.computeSerializedSize();
//        size += updates.computeSerializedSize();

        return size;
    }

    @Override
    public String toString() {
        return _constructor;
    }

    @Override
    public int getConstructorId() {
        return CONSTRUCTOR_ID;
    }

    public long getAuthKeyId() {
        return authKeyId;
    }

    public void setAuthKeyId(long authKeyId) {
        this.authKeyId = authKeyId;
    }

    public int getUserId() {
        return userId;
    }

    public void setUserId(int userId) {
        this.userId = userId;
    }

    public long getRequestTime() {
        return requestTime;
    }

    public void setRequestTime(long requestTime) {
        this.requestTime = requestTime;
    }

    public long getResponseTime() {
        return responseTime;
    }

    public void setResponseTime(long responseTime) {
        this.responseTime = responseTime;
    }

    public TLObject getRequest() {
        return request;
    }

    public void setRequest(TLObject request) {
        this.request = request;
    }

    public TLObject getResponse() {
        return response;
    }

    public void setResponse(TLObject response) {
        this.response = response;
    }

/*
    public TLObject getUpdates() {
        return updates;
    }

    public void setUpdates(TLObject updates) {
        this.updates = updates;
    }
*/
}
