package io.objects.tl.api;

import io.objects.tl.TLContext;
import io.objects.tl.core.TLLongVector;
import io.objects.tl.core.TLMethod;

import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;

import static io.objects.tl.StreamUtils.readTLLongVector;
import static io.objects.tl.StreamUtils.writeTLVector;

/**
 * This class is generated by Mono's TL class generator
 */
public class TLRequestMessagesState extends TLMethod<TLMessagesStateInfo> {
    public static final int CONSTRUCTOR_ID = 0xda69fb52;

    protected TLLongVector messages;

    private final String _constructor = "messagesState#da69fb52";

    public TLRequestMessagesState() {
    }

    public TLLongVector getMessages() {
        return messages;
    }

    public void setMessages(TLLongVector messages) {
        this.messages = messages;
    }

    @Override
    public TLMessagesStateInfo deserializeResponse(InputStream stream, TLContext context) throws IOException {
        return null;
    }

    @Override
    @SuppressWarnings({"unchecked", "SimplifiableConditionalExpression"})
    public void deserializeBody(InputStream stream, TLContext context) throws IOException {
        messages = readTLLongVector(stream, context);
    }

    @Override
    public String toString() {
        return _constructor;
    }

    @Override
    public int getConstructorId() {
        return CONSTRUCTOR_ID;
    }

    @Override
    public void serializeBody(OutputStream stream) throws IOException {
        writeTLVector(messages, stream);
    }
}
