package io.objects.tl.api;

import io.objects.tl.TLContext;
import io.objects.tl.core.TLMethod;

import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;

import static io.objects.tl.StreamUtils.readTLString;
import static io.objects.tl.StreamUtils.writeString;
import static io.objects.tl.TLObjectUtils.SIZE_CONSTRUCTOR_ID;
import static io.objects.tl.TLObjectUtils.computeTLStringSerializedSize;

/**
 * This class is generated by Mono's TL class generator
 */
public class TLRequestLangpackGetLanguageVtd extends TLMethod<TLLangPackLanguageVtd> {
    public static final int CONSTRUCTOR_ID = 0x6a596502;

    protected String langPack;

    protected String langPackCode;

    private final String _constructor = "langpack.getLanguageVtd#6a596502";

    public TLRequestLangpackGetLanguageVtd() {
    }

    public TLRequestLangpackGetLanguageVtd(String langPack) {
        this.langPack = langPack;
    }

    @Override
    @SuppressWarnings({"unchecked", "SimplifiableConditionalExpression"})
    public TLLangPackLanguageVtd deserializeResponse(InputStream stream, TLContext context) {
        return new TLLangPackLanguageVtd();
    }

    @Override
    public void serializeBody(OutputStream stream) throws IOException {
        writeString(langPack, stream);
        writeString(langPackCode, stream);
    }

    @Override
    @SuppressWarnings({"unchecked", "SimplifiableConditionalExpression"})
    public void deserializeBody(InputStream stream, TLContext context) throws IOException {
        langPack = readTLString(stream);
        langPackCode = readTLString(stream);
    }

    @Override
    public int computeSerializedSize() {
        int size = SIZE_CONSTRUCTOR_ID;
        size += computeTLStringSerializedSize(langPack);
        size += computeTLStringSerializedSize(langPackCode);
        return size;
    }

    @Override
    public String toString() {
        return _constructor;
    }

    @Override
    public int getConstructorId() {
        return CONSTRUCTOR_ID;
    }

    public String getLangPack() {
        return langPack;
    }

    public void setLangPack(String langPack) {
        this.langPack = langPack;
    }
}
