package io.objects.tl.api.messages;

import io.objects.tl.TLContext;
import io.objects.tl.api.TLAbsUpdate;

import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;

import static io.objects.tl.StreamUtils.readInt;
import static io.objects.tl.StreamUtils.writeInt;
import static io.objects.tl.TLObjectUtils.SIZE_CONSTRUCTOR_ID;
import static io.objects.tl.TLObjectUtils.SIZE_INT32;

/**
 * This class is generated by Mono's TL class generator
 */
public class TLUpdateMessagesPinnedMessage extends TLAbsUpdate {
    public static final int CONSTRUCTOR_ID = 0x98592470;

    protected int flags;

    protected int peerId;

    protected int id;

    protected boolean silent;

    protected boolean unpin;

    private final String _constructor = "updateMessagesPinnedMessage#98592470";

    public TLUpdateMessagesPinnedMessage() {
    }

    public TLUpdateMessagesPinnedMessage(int peerId, int id, boolean silent, boolean unpin) {
        this.peerId = peerId;
        this.id = id;
        this.silent = silent;
        this.unpin = unpin;
    }

    private void computeFlags() {
        flags = 0;
        flags = silent ? (flags | 1) : (flags & ~1);
        flags = unpin ? (flags | 2) : (flags & ~2);
    }


    @Override
    public void serializeBody(OutputStream stream) throws IOException {
        computeFlags();
        writeInt(flags, stream);
        writeInt(peerId, stream);
        writeInt(id, stream);
    }

    @Override
    @SuppressWarnings({"unchecked", "SimplifiableConditionalExpression"})
    public void deserializeBody(InputStream stream, TLContext context) throws IOException {
        flags = readInt(stream);
        silent = (flags & 1) != 0;
        unpin = (flags & 2) != 0;
        peerId = readInt(stream);
        id = readInt(stream);
    }

    @Override
    public int computeSerializedSize() {
        int size = SIZE_CONSTRUCTOR_ID;
        size += SIZE_INT32;
        size += SIZE_INT32;
        size += SIZE_INT32;
        return size;
    }

    @Override
    public String toString() {
        return _constructor;
    }

    @Override
    public int getConstructorId() {
        return CONSTRUCTOR_ID;
    }

    public int getPeerId() {
        return peerId;
    }

    public void setPeerId(int peerId) {
        this.peerId = peerId;
    }

    public boolean isSilent() {
        return silent;
    }

    public void setSilent(boolean silent) {
        this.silent = silent;
    }

    public boolean isUnpin() {
        return unpin;
    }

    public void setUnpin(boolean unpin) {
        this.unpin = unpin;
    }

    public int getId() {
        return id;
    }

    public void setId(int id) {
        this.id = id;
    }
}
