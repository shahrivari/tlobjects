package io.objects.tl.api;

import static io.objects.tl.StreamUtils.*;
import static io.objects.tl.TLObjectUtils.*;

import io.objects.tl.TLContext;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;

/**
 * This class is generated by Mono's TL class generator
 */
public class TLDecryptedMessageActionAbortKey extends TLAbsDecryptedMessageAction {
    public static final int CONSTRUCTOR_ID = 0xdd05ec6b;

    protected long exchangeId;

    private final String _constructor = "decryptedMessageActionAbortKey#dd05ec6b";

    public TLDecryptedMessageActionAbortKey() {
    }

    public TLDecryptedMessageActionAbortKey(long exchangeId) {
        this.exchangeId = exchangeId;
    }

    @Override
    public void serializeBody(OutputStream stream) throws IOException {
        writeLong(exchangeId, stream);
    }

    @Override
    @SuppressWarnings({"unchecked", "SimplifiableConditionalExpression"})
    public void deserializeBody(InputStream stream, TLContext context) throws IOException {
        exchangeId = readLong(stream);
    }

    @Override
    public int computeSerializedSize() {
        int size = SIZE_CONSTRUCTOR_ID;
        size += SIZE_INT64;
        return size;
    }

    @Override
    public String toString() {
        return _constructor;
    }

    @Override
    public int getConstructorId() {
        return CONSTRUCTOR_ID;
    }

    public long getExchangeId() {
        return exchangeId;
    }

    public void setExchangeId(long exchangeId) {
        this.exchangeId = exchangeId;
    }
}
