package io.objects.tl.mtproto.tl;

import io.objects.tl.TLContext;
import io.objects.tl.core.TLMethod;
import io.objects.tl.core.TLObject;

import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;

import static io.objects.tl.StreamUtils.*;
import static io.objects.tl.TLObjectUtils.SIZE_CONSTRUCTOR_ID;
import static io.objects.tl.TLObjectUtils.SIZE_INT64;

/**
 * This class is generated by Alxan and Xanjar: V85a
 */
public class MTRpcDropAnswer extends TLMethod<MTRpcAnswerUnknown> {
    public static final int CONSTRUCTOR_ID = 0x58e4a740;

    protected long reqMsgId;

    private final String _constructor = "rpc_drop_answer#58e4a740";

    public MTRpcDropAnswer() {  }

    public MTRpcDropAnswer(long reqMsgId) {
        this.reqMsgId = reqMsgId;
    }

    @Override
    @SuppressWarnings({"unchecked", "SimplifiableConditionalExpression"})
    public MTRpcAnswerUnknown deserializeResponse(InputStream stream, TLContext context) throws IOException {
        final TLObject response = readTLObject(stream, context);
        if (response == null) {
            throw new IOException("Unable to parse response");
        }
        if (!(response instanceof MTRpcAnswerUnknown)) {
            throw new IOException("Incorrect response type, expected " + getClass().getCanonicalName() + ", found " + response.getClass().getCanonicalName());
        }
        return (MTRpcAnswerUnknown) response;
    }

    @Override
    public void serializeBody(OutputStream stream) throws IOException {
        writeLong(reqMsgId, stream);
    }

    @Override
    @SuppressWarnings({"unchecked", "SimplifiableConditionalExpression"})
    public void deserializeBody(InputStream stream, TLContext context) throws IOException {
        reqMsgId = readLong(stream);
    }

    @Override
    public int computeSerializedSize() {
        int size = SIZE_CONSTRUCTOR_ID;
        size += SIZE_INT64;
        return size;
    }

    @Override
    public String toString() {
        return _constructor;
    }

    @Override
    public int getConstructorId() {
        return CONSTRUCTOR_ID;
    }

    public long getReqMsgId() {
        return reqMsgId;
    }

    public void setReqMsgId(long reqMsgId) {
        this.reqMsgId = reqMsgId;
    }
}
