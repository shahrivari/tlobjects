package io.tlobjects.tl.api.request;

import io.tlobjects.tl.TLContext;
import io.tlobjects.tl.core.TLBool;
import io.tlobjects.tl.core.TLMethod;
import io.tlobjects.tl.core.TLObject;

import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;

import static io.tlobjects.tl.StreamUtils.*;
import static io.tlobjects.tl.TLObjectUtils.SIZE_CONSTRUCTOR_ID;
import static io.tlobjects.tl.TLObjectUtils.SIZE_INT32;

/**
 * This class is generated by Mono's TL class generator
 */
public class TLRequestScheduledSendMessage extends TLMethod<TLBool> {
    public static final int CONSTRUCTOR_ID = 0x13FA6AB0;

    protected TLRequestMessagesSendMessage message;
    protected int time;

    private final String _constructor = "users.getUsers#13FA6AB0";

    public TLRequestScheduledSendMessage() {
    }

    public TLRequestScheduledSendMessage(TLRequestMessagesSendMessage message, int time) {
        this.message = message;
        this.time = time;
    }

    @Override
    @SuppressWarnings({"unchecked", "SimplifiableConditionalExpression"})
    public TLBool deserializeResponse(InputStream stream, TLContext context) throws
            IOException {
        if (readTLBool(stream))
            return TLBool.TRUE;
        else
            return TLBool.FALSE;
    }

    @Override
    public void serializeBody(OutputStream stream) throws IOException {
        writeTLObject(message, stream);
        writeInt(time, stream);
    }

    @Override
    @SuppressWarnings({"unchecked", "SimplifiableConditionalExpression"})
    public void deserializeBody(InputStream stream, TLContext context) throws IOException {
        TLObject messageObject = readTLObject(stream, context);
        if (messageObject instanceof TLRequestMessagesSendMessage)
            message = (TLRequestMessagesSendMessage) messageObject;
        else
            throw new IllegalArgumentException(
                    "Message not instance of TLRequestScheduledSendMessage");
        time = readInt(stream);
    }

    @Override
    public int computeSerializedSize() {
        int size = SIZE_CONSTRUCTOR_ID;
        size += message.computeSerializedSize();
        size += SIZE_INT32;
        return size;
    }

    @Override
    public String toString() {
        return _constructor;
    }

    @Override
    public int getConstructorId() {
        return CONSTRUCTOR_ID;
    }

    public TLRequestMessagesSendMessage getMessage() {
        return message;
    }

    public void setMessage(TLRequestMessagesSendMessage message) {
        this.message = message;
    }

    public int getTime() {
        return time;
    }

    public void setTime(int time) {
        this.time = time;
    }
}
